// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using assinment1.Models;

namespace assinment1.Migrations
{
    [DbContext(typeof(ContextDb))]
    partial class ContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("assinment1.Models.ClassRoom", b =>
                {
                    b.Property<int>("Hall_Code")
                        .HasColumnType("int");

                    b.HasKey("Hall_Code");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("assinment1.Models.Courses", b =>
                {
                    b.Property<string>("Course_code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Course_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours_Per_week")
                        .HasColumnType("int");

                    b.HasKey("Course_code");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("assinment1.Models.Professor_course", b =>
                {
                    b.Property<int>("Prof_Id")
                        .HasColumnType("int");

                    b.Property<string>("Course_code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Prof_Id", "Course_code");

                    b.HasIndex("Course_code");

                    b.ToTable("Professor_Courses");
                });

            modelBuilder.Entity("assinment1.Models.Professors", b =>
                {
                    b.Property<int>("Professor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Professor_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Teaching_Load")
                        .HasColumnType("int");

                    b.HasKey("Professor_Id");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("assinment1.Models.Sections", b =>
                {
                    b.Property<int>("Section_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hall_Num")
                        .HasColumnType("int");

                    b.Property<string>("LastDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Professor_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Section_Id");

                    b.HasIndex("Course_Code");

                    b.HasIndex("Hall_Num");

                    b.HasIndex("Professor_Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("assinment1.Models.Professor_course", b =>
                {
                    b.HasOne("assinment1.Models.Courses", "Course")
                        .WithMany("professor_Courses")
                        .HasForeignKey("Course_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assinment1.Models.Professors", "Professor")
                        .WithMany("professor_Courses")
                        .HasForeignKey("Prof_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("assinment1.Models.Sections", b =>
                {
                    b.HasOne("assinment1.Models.Courses", "course")
                        .WithMany("Sections")
                        .HasForeignKey("Course_Code");

                    b.HasOne("assinment1.Models.ClassRoom", "Room")
                        .WithMany("Sections")
                        .HasForeignKey("Hall_Num")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assinment1.Models.Professors", "professor")
                        .WithMany()
                        .HasForeignKey("Professor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("professor");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("assinment1.Models.ClassRoom", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("assinment1.Models.Courses", b =>
                {
                    b.Navigation("professor_Courses");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("assinment1.Models.Professors", b =>
                {
                    b.Navigation("professor_Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
